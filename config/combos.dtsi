/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │         │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │         │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 ╰───╮ ╭───╯ RB0 RB1 RB2 RB3 RB4 │
  ╰───────────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */

// use require-prior-idle-ms for combos
#undef COMBO_HOOK
#define COMBO_HOOK require-prior-idle-ms = <200>;

#undef COMBO_TERM
#define COMBO_TERM 30

//////////////////////////////
// Vertical combos
//////////////////////////////

// Vertical combos - left hand

ZMK_BEHAVIOR(_smart_grave, macro,
    bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
)
ZMK_BEHAVIOR(smart_grave, tap_dance,
    bindings = <&kp GRAVE>, <&_smart_grave>;
)

ZMK_COMBO(grave , &smart_grave       , LT4 LM4 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , LM4 LB4 , PRI SEC , COMBO_TERM)

ZMK_COMBO(minus , &kp MINUS          , LT3 LM3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(plus  , &kp PLUS           , LM3 LB3 , PRI SEC , COMBO_TERM)

ZMK_COMBO(fslh  , &kp FSLH           , LT2 LM2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(star  , &kp STAR           , LM2 LB2 , PRI SEC , COMBO_TERM)

ZMK_COMBO(pipe  , &kp PIPE           , LT1 LM1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(amps  , &kp AMPS           , LM1 LB1 , PRI SEC , COMBO_TERM)

ZMK_COMBO(under , &kp UNDER          , LT0 LM0 , PRI SEC , COMBO_TERM)
ZMK_COMBO(equal , &kp EQUAL          , LM0 LB0 , PRI SEC , COMBO_TERM)

// Vertical combos - right hand

ZMK_COMBO(at    , &kp AT             , RT0 RM0 , PRI SEC , COMBO_TERM)
ZMK_COMBO(tilde , &kp TILDE          , RM0 RB0 , PRI SEC , COMBO_TERM)

ZMK_COMBO(hash  , &kp HASH           , RT1 RM1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(prcnt , &kp PRCNT          , RM1 RB1 , PRI SEC , COMBO_TERM)

ZMK_COMBO(qmark , &kp QMARK          , RT2 RM2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(excl  , &kp EXCL           , RM2 RB2 , PRI SEC , COMBO_TERM)

ZMK_COMBO(dllr  , &kp DLLR           , RT3 RM3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(caret , &kp CARET          , RM3 RB3 , PRI SEC , COMBO_TERM)

ZMK_COMBO(bslh  , &kp BSLH           , RT4 RM4 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , RM4 RB4 , PRI SEC , COMBO_TERM)

//////////////////////////////
// Horizontal combos
//////////////////////////////

// Horizontal combos - left hand

ZMK_BEHAVIOR(_smart_aps, macro,
    bindings = <&kp APOS &kp APOS &kp LEFT>;
)
ZMK_BEHAVIOR(smart_aps, tap_dance,
    bindings = <&kp APOS>, <&_smart_aps>;
)

ZMK_BEHAVIOR(_smart_thn, macro,
    bindings = <&kp LT &kp GT &kp LEFT>;
)
ZMK_BEHAVIOR(smart_thn, tap_dance,
    bindings = <&kp LT>, <&_smart_thn>;
)

ZMK_BEHAVIOR(_smart_par, macro,
    bindings = <&kp LPAR &kp RPAR &kp LEFT>;
)
ZMK_BEHAVIOR(smart_par, tap_dance,
    bindings = <&kp LPAR>, <&_smart_par>;
)

ZMK_COMBO(apos  , &smart_aps         , LT4 LT3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(lt    , &smart_thn         , LT3 LT2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(rt    , &kp LS(DOT)        , LT2 LT1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , LT1 LT0 , PRI SEC , COMBO_TERM)

ZMK_COMBO(___   , &kp 0              , LM4 LM3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , LM3 LM2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , LM2 LM1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , LM1 LM0 , PRI SEC , COMBO_TERM)

ZMK_COMBO(___   , &kp 0              , LB4 LB3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(lpar  , &smart_par         , LB3 LB2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(rpar  , &kp RPAR           , LB2 LB1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , LB1 LB0 , PRI SEC , COMBO_TERM)

// Horizontal combos - right hand

ZMK_BEHAVIOR(_smart_bkt, macro,
    bindings = <&kp LBKT &kp RBKT &kp LEFT>;
)
ZMK_BEHAVIOR(smart_bkt, tap_dance,
    bindings = <&kp LBKT>, <&_smart_bkt>;
)

ZMK_BEHAVIOR(_smart_brc, macro,
    bindings = <&kp LBRC &kp RBRC &kp LEFT>;
)
ZMK_BEHAVIOR(smart_brc, tap_dance,
    bindings = <&kp LBRC>, <&_smart_brc>;
)

ZMK_BEHAVIOR(_smart_apss, macro,
    bindings = <&kp LS(APOS) &kp LS(APOS) &kp LEFT>;
)
ZMK_BEHAVIOR(smart_apss, tap_dance,
    bindings = <&kp LS(APOS)>, <&_smart_apss>;
)

ZMK_COMBO(___   , &kp 0              , RT0 RT1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(lbkt  , &smart_bkt         , RT1 RT2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(rbkt  , &kp RBKT           , RT2 RT3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(aposs , &smart_apss        , RT3 RT4 , PRI SEC , COMBO_TERM)

ZMK_COMBO(___   , &kp 0              , RM0 RM1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , RM1 RM2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , RM2 RM3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , RM3 RM4 , PRI SEC , COMBO_TERM)

ZMK_COMBO(___   , &kp 0              , RB0 RB1 , PRI SEC , COMBO_TERM)
ZMK_COMBO(lbrc  , &smart_brc         , RB1 RB2 , PRI SEC , COMBO_TERM)
ZMK_COMBO(rbrc  , &kp RBRC           , RB2 RB3 , PRI SEC , COMBO_TERM)
ZMK_COMBO(___   , &kp 0              , RB3 RB4 , PRI SEC , COMBO_TERM)

/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │         │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │         │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 ╰───╮ ╭───╯ RB0 RB1 RB2 RB3 RB4 │
  ╰───────────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */
