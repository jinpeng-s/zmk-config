/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │         │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │         │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 ╰───╮ ╭───╯ RB0 RB1 RB2 RB3 RB4 │
  ╰───────────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */

// use require-prior-idle-ms for combos
#undef COMBO_HOOK
#define COMBO_HOOK require-prior-idle-ms = <175>;

#undef COMBO_TERM
#define COMBO_TERM 30

#define TAP_MS 175

ZMK_BEHAVIOR(to_rus, macro,
    bindings = <&kp LA(LC(LS(U))) &tog RUS>;
)

ZMK_BEHAVIOR(to_gre, macro,
    bindings = <&kp LA(LC(LS(U))) &tog GRE>;
)

/ {
    behaviors {
        to_rus_or_gre: to_rus_or_gre {
            compatible = "zmk,behavior-tap-dance";
            label = "to_rus_or_gre";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_MS>;
            bindings = <&to_rus>, <&to_gre>;
        };
    };
};

ZMK_BEHAVIOR(rus_to_eng, macro,
    bindings = <&kp LA(LC(LS(E))) &tog RUS>;
)

ZMK_BEHAVIOR(rus_to_ch, macro,
    bindings = <&kp LA(LC(LS(C))) &tog RUS>;
)

ZMK_BEHAVIOR(from_rus, macro,
    bindings = <&mt &gre_to_ch &gre_to_eng>;
)

ZMK_BEHAVIOR(gre_to_eng, macro,
    bindings = <&kp LA(LC(LS(E))) &tog GRE>;
)

ZMK_BEHAVIOR(gre_to_ch, macro,
    bindings = <&kp LA(LC(LS(C))) &tog GRE>;
)

ZMK_BEHAVIOR(from_gre, macro,
    bindings = <&mt &gre_to_ch &gre_to_eng>;
)

/* Vertical combos - left hand */
ZMK_COMBO(amps  , &kp AMPS      , LT4 LM4 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(pipe  , &kp PIPE      , LM4 LB4 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(plus  , &kp PLUS      , LT3 LM3 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(minus , &kp MINUS     , LM3 LB3 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(star  , &kp STAR      , LT2 LM2 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(fslh  , &kp FSLH      , LM2 LB2 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(under , &kp UNDER     , LT1 LM1 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(equal , &kp EQUAL     , LM1 LB1 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(prcnt , &kp PRCNT     , LT0 LM0 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(caret , &kp CARET     , LM0 LB0 , DEF RUS GRE SYM , COMBO_TERM)

/* Vertical combos - right hand */                  
ZMK_COMBO(tilde , &kp TILDE     , RT0 RM0 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(grave , &kp GRAVE     , RM0 RB0 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(excl  , &kp EXCL      , RT1 RM1 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(qmark , &kp QMARK     , RM1 RB1 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(comma , &kp COMMA     , RT2 RM2 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(semi  , &kp SEMI      , RM2 RB2 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(dot   , &kp DOT       , RT3 RM3 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(colon , &kp COLON     , RM3 RB3 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(at    , &kp AT        , RT4 RM4 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(hash  , &kp HASH      , RM4 RB4 , DEF RUS GRE SYM , COMBO_TERM)

/* Horizontal combos - left hand */                 
ZMK_COMBO(bspc  , &mt ESC BSPC       , LT4 LT3 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(ret   , &mt &caps_word RET , LB4 LB3 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(apos  , &kp APOS      , LT3 LT2 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(lpar  , &kp LPAR      , LB3 LB2 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(aposs , &kp LS(APOS)  , LT2 LT1 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(rpar  , &kp RPAR      , LB2 LB1 , DEF RUS GRE SYM , COMBO_TERM)

/* Horizontal combon - right hand */                

ZMK_COMBO(ru_e  , &ru_e         , RT0 RT1 ,     RUS         , COMBO_TERM)
ZMK_COMBO(ru_kh , &ru_kh        , RB0 RB1 ,     RUS         , COMBO_TERM)

ZMK_COMBO(lbkt  , &kp LBKT      , RT1 RT2 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(lbrc  , &kp LBRC      , RB1 RB2 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(rbkt  , &kp RBKT      , RT2 RT3 , DEF RUS GRE SYM , COMBO_TERM)
ZMK_COMBO(rbrc  , &kp RBRC      , RB2 RB3 , DEF RUS GRE SYM , COMBO_TERM)

ZMK_COMBO(cl    , &to_rus_or_gre, RB3 RT4 , DEF         SYM , COMBO_TERM)
ZMK_COMBO(rus   , &from_rus     , RB3 RT4 ,     RUS         , COMBO_TERM)
ZMK_COMBO(gre   , &from_gre     , RB3 RT4 ,         GRE     , COMBO_TERM)

/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │         │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │         │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 ╰───╮ ╭───╯ RB0 RB1 RB2 RB3 RB4 │
  ╰───────────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */
