#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/international_chars/greek.dtsi"
#include "../zmk-nodefree-config/international_chars/german.dtsi"

#define DEF 0
#define SYM 1
#define APP 2
#define SYS 3
#define NAV 4
#define BLU 5
#define RUS 6
#define GRE 7

#include "extra_keys.h"
#include "combos.dtsi"

#define _X_ &none
#define ___ &trans

#define TAP_MS 175

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&sk {
    release-after-ms = <1000>;
    quick-release;
};

#define MAKE_HRM(NAME, HOLD, TAP) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <TAP_MS>; \
        quick-tap-ms = <TAP_MS>; \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>; \
    )
MAKE_HRM(hm, &sk, &kp)

// ---------- base ----------

ZMK_LAYER(base,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   &kp Q             &kp W             &kp E             &kp R             &kp T                       &kp Y             &kp U             &kp I             &kp O             &kp P           _X_
//                     BSP / ESC          '                 "                                                                                 [                 ]
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//             &                 +                 *                 _                 %                           ~                 !                 ,                 .                 @
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &hm LGUI A        &hm LALT S        &hm LCTRL D       &hm LSHFT F       &kp G                       &kp H             &hm LSHFT J       &hm LCTRL K       &hm LALT L        &hm LGUI 0      _X_
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//             |                 -                 /                 =                 ^                           `                 ?                 ;                 :                 #
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &kp Z             &kp X             &kp C             &kp V             &kp B                       &kp N             &kp M             ___               ___               &kp BSLH        _X_
//                     RET / Caps Word    (                 )                                                                                 {                 }
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               &lt SYM SPACE     &lt APP TAB     _X_   _X_   &lt SYS BSPC      &lt NAV RET
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

// ---------- sym ----------

ZMK_LAYER(sym,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   &kp LT            &kp N7            &kp N8            &kp N9            ___                         ___               ___               ___               ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &kp N0            &kp N4            &kp N5            &kp N6            &kp DLLR                    ___               ___               ___               ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &kp GT            &kp N1            &kp N2            &kp N3            ___                         ___               ___               ___               ___               ___             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               _X_               ___             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

// ---------- app ----------

ZMK_LAYER(app,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   &kp LA(LS(N1))    &kp LA(LS(N6))    ___               ___               &kp LG(LS(SPACE))           ___               ___               ___               ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &kp LA(LS(N3))    &kp LA(LS(N2))    ___               &kp LG(LS(F))     ___                         ___               ___               ___               ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &kp LA(LS(N5))    &kp LA(LS(N4))    &kp LG(LS(C))     ___               ___                         ___               ___               ___               ___               ___             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               _X_             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

// ---------- sys ----------

ZMK_BEHAVIOR(to_rus, macro,
    bindings = <&kp LA(LC(LS(U))) &tog RUS>;
)

ZMK_BEHAVIOR(rus_to_eng, macro,
    bindings = <&kp LA(LC(LS(E))) &tog RUS>;
)

ZMK_BEHAVIOR(rus_to_ch, macro,
    bindings = <&kp LA(LC(LS(C))) &tog RUS>;
)

ZMK_BEHAVIOR(to_gre, macro,
    bindings = <&kp LA(LC(LS(U))) &tog GRE>;
)

ZMK_BEHAVIOR(gre_to_eng, macro,
    bindings = <&kp LA(LC(LS(E))) &tog GRE>;
)

ZMK_BEHAVIOR(gre_to_ch, macro,
    bindings = <&kp LA(LC(LS(C))) &tog GRE>;
)

ZMK_LAYER(sys,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   ___               ___               ___               ___               ___                         ___               &rus_to_eng       &gre_to_eng       ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               ___                         ___               &to_rus           &to_gre           ___                ___            _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               ___                         ___               &rus_to_ch        &gre_to_ch        ___               ___             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               ___             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

// ---------- nav ----------

ZMK_LAYER(nav,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   ___               ___               &kp C_BRI_DN      &kp C_BRI_UP      ___                         &kp HOME          &kp PG_DN         &kp PG_UP         &kp END           ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &kp C_MUTE        &kp C_PREV        &kp C_VOL_DN      &kp C_VOL_UP      &kp C_NEXT                  &mt HOME LEFT     &kp DOWN          &kp UP            &mt END RIGHT     ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               ___                         ___               ___               ___               ___               ___             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               ___             _X_   _X_   ___               _X_
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

// ---------- blu ----------

#if CONFIG_WIRELESS

#include <dt-bindings/zmk/bt.h>

ZMK_CONDITIONAL_LAYER(APP SYS, BLU)

ZMK_LAYER(blu,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_CLR                  &bt BT_CLR        &bt BT_SEL 4      &bt BT_SEL 5      &bt BT_SEL 6      &bt BT_SEL 7    _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               &bootloader                 &bootloader       ___               ___               ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               &sys_reset                  &sys_reset        ___               ___               ___               ___             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               ___             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

#else

ZMK_LAYER(blu,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   &trans            &trans            &trans            &trans            &trans                      &trans            &trans            &trans            &trans            &trans          _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               &bootloader                 &bootloader       ___               ___               ___               ___             _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   ___               ___               ___               ___               &sys_reset                  &sys_reset        ___               ___               ___               ___             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               ___             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

#endif

// ---------- rus ----------

ZMK_UNICODE_PAIR(ru_a    ,    N0 , N4 , N3 , N0 ,    N0 , N4 , N1 , N0) // а/А
ZMK_UNICODE_PAIR(ru_b    ,    N0 , N4 , N3 , N1 ,    N0 , N4 , N1 , N1) // б/Б
ZMK_UNICODE_PAIR(ru_v    ,    N0 , N4 , N3 , N2 ,    N0 , N4 , N1 , N2) // в/В
ZMK_UNICODE_PAIR(ru_g    ,    N0 , N4 , N3 , N3 ,    N0 , N4 , N1 , N3) // г/Г
ZMK_UNICODE_PAIR(ru_d    ,    N0 , N4 , N3 , N4 ,    N0 , N4 , N1 , N4) // д/Д
ZMK_UNICODE_PAIR(ru_ye   ,    N0 , N4 , N3 , N5 ,    N0 , N4 , N1 , N5) // е/Е
ZMK_UNICODE_PAIR(ru_yo   ,    N0 , N4 , N5 , N1 ,    N0 , N4 , N0 , N1) // ё/Ё
ZMK_UNICODE_PAIR(ru_zh   ,    N0 , N4 , N3 , N6 ,    N0 , N4 , N1 , N6) // ж/Ж
ZMK_UNICODE_PAIR(ru_z    ,    N0 , N4 , N3 , N7 ,    N0 , N4 , N1 , N7) // з/З
ZMK_UNICODE_PAIR(ru_i    ,    N0 , N4 , N3 , N8 ,    N0 , N4 , N1 , N8) // и/И
ZMK_UNICODE_PAIR(ru_y    ,    N0 , N4 , N3 , N9 ,    N0 , N4 , N1 , N9) // й/Й
ZMK_UNICODE_PAIR(ru_k    ,    N0 , N4 , N3 ,  A ,    N0 , N4 , N1 ,  A) // к/К
ZMK_UNICODE_PAIR(ru_l    ,    N0 , N4 , N3 ,  B ,    N0 , N4 , N1 ,  B) // л/Л
ZMK_UNICODE_PAIR(ru_m    ,    N0 , N4 , N3 ,  C ,    N0 , N4 , N1 ,  C) // м/М
ZMK_UNICODE_PAIR(ru_n    ,    N0 , N4 , N3 ,  D ,    N0 , N4 , N1 ,  D) // н/Н
ZMK_UNICODE_PAIR(ru_o    ,    N0 , N4 , N3 ,  E ,    N0 , N4 , N1 ,  E) // о/О
ZMK_UNICODE_PAIR(ru_p    ,    N0 , N4 , N3 ,  F ,    N0 , N4 , N1 ,  F) // п/П
ZMK_UNICODE_PAIR(ru_r    ,    N0 , N4 , N4 , N0 ,    N0 , N4 , N2 , N0) // р/Р
ZMK_UNICODE_PAIR(ru_s    ,    N0 , N4 , N4 , N1 ,    N0 , N4 , N2 , N1) // с/С
ZMK_UNICODE_PAIR(ru_t    ,    N0 , N4 , N4 , N2 ,    N0 , N4 , N2 , N2) // т/Т
ZMK_UNICODE_PAIR(ru_u    ,    N0 , N4 , N4 , N3 ,    N0 , N4 , N2 , N3) // у/У
ZMK_UNICODE_PAIR(ru_f    ,    N0 , N4 , N4 , N4 ,    N0 , N4 , N2 , N4) // ф/Ф
ZMK_UNICODE_PAIR(ru_kh   ,    N0 , N4 , N4 , N5 ,    N0 , N4 , N2 , N5) // х/Х
ZMK_UNICODE_PAIR(ru_ts   ,    N0 , N4 , N4 , N6 ,    N0 , N4 , N2 , N6) // ц/Ц
ZMK_UNICODE_PAIR(ru_ch   ,    N0 , N4 , N4 , N7 ,    N0 , N4 , N2 , N7) // ч/Ч
ZMK_UNICODE_PAIR(ru_sh   ,    N0 , N4 , N4 , N8 ,    N0 , N4 , N2 , N8) // ш/Ш
ZMK_UNICODE_PAIR(ru_shch ,    N0 , N4 , N4 , N9 ,    N0 , N4 , N2 , N9) // щ/Щ
ZMK_UNICODE_PAIR(ru_hard ,    N0 , N4 , N4 ,  A ,    N0 , N4 , N2 ,  A) // ъ/Ъ
ZMK_UNICODE_PAIR(ru_bi   ,    N0 , N4 , N4 ,  B ,    N0 , N4 , N2 ,  B) // ы/Ы
ZMK_UNICODE_PAIR(ru_soft ,    N0 , N4 , N4 ,  C ,    N0 , N4 , N2 ,  C) // ь/Ь
ZMK_UNICODE_PAIR(ru_e    ,    N0 , N4 , N4 ,  D ,    N0 , N4 , N2 ,  D) // э/Э
ZMK_UNICODE_PAIR(ru_yu   ,    N0 , N4 , N4 ,  E ,    N0 , N4 , N2 ,  E) // ю/Ю
ZMK_UNICODE_PAIR(ru_ya   ,    N0 , N4 , N4 ,  F ,    N0 , N4 , N2 ,  F) // я/Я

ZMK_UNICODE_PAIR(ru_tone ,    N0 , N4 , N4 ,  C ,    N0 , N4 , N4 ,  A) // ь/ъ

MAKE_HRM(hm_a, &sk, &ru_a)
MAKE_HRM(hm_o, &sk, &ru_o)

ZMK_LAYER(rus,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   &ru_y             &ru_ts            &ru_u             &ru_k             &ru_ye                      &ru_n             &ru_g             &ru_sh            &ru_shch          &ru_z           _X_
//                     BSP / ESC          '                 "                                                              э/Э                [                 ]
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//             &                 +                 *                 _                 %                           ~                 !                 ,                 .                 @
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &ru_f             &ru_bi            &ru_v             &hm_a LSHFT 0     &ru_p                       &ru_r             &hm_o LSHFT 0     &ru_l             &ru_d             &ru_zh          _X_
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//             |                 -                 /                 =                 ^                           `                 ?                 ;                 :                 #
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &ru_ya            &ru_ch            &ru_s             &ru_m             &ru_i                       &ru_t             &ru_tone          &ru_b             &ru_yu            &ru_yo          _X_
//                     RET / Caps Word    (                 )                                                              х/Х                {                 }
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               ___             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)

// ---------- gre ----------

ZMK_UNICODE_PAIR(el_alpha   ,    N0 , N3 , B , N1 ,    N0 , N3 , N9 , N1) // α/Α
ZMK_UNICODE_PAIR(el_beta    ,    N0 , N3 , B , N2 ,    N0 , N3 , N9 , N2) // β/Β
ZMK_UNICODE_PAIR(el_gamma   ,    N0 , N3 , B , N3 ,    N0 , N3 , N9 , N3) // γ/Γ
ZMK_UNICODE_PAIR(el_delta   ,    N0 , N3 , B , N4 ,    N0 , N3 , N9 , N4) // δ/Δ
ZMK_UNICODE_PAIR(el_epsilon ,    N0 , N3 , F , N5 ,    N0 , N3 , N9 , N5) // ε/Ε
ZMK_UNICODE_PAIR(el_zeta    ,    N0 , N3 , B , N6 ,    N0 , N3 , N9 , N6) // ζ/Ζ
ZMK_UNICODE_PAIR(el_eta     ,    N0 , N3 , B , N7 ,    N0 , N3 , N9 , N7) // η/Η
ZMK_UNICODE_PAIR(el_theta   ,    N0 , N3 , B , N8 ,    N0 , N3 , N9 , N8) // θ/Θ
ZMK_UNICODE_PAIR(el_iota    ,    N0 , N3 , B , N9 ,    N0 , N3 , N9 , N9) // ι/Ι
ZMK_UNICODE_PAIR(el_kappa   ,    N0 , N3 , B ,  A ,    N0 , N3 , N9 ,  A) // κ/Κ
ZMK_UNICODE_PAIR(el_lambda  ,    N0 , N3 , B ,  B ,    N0 , N3 , N9 ,  B) // λ/Λ
ZMK_UNICODE_PAIR(el_mu      ,    N0 , N3 , B ,  C ,    N0 , N3 , N9 ,  C) // μ/Μ
ZMK_UNICODE_PAIR(el_nu      ,    N0 , N3 , B ,  D ,    N0 , N3 , N9 ,  D) // ν/Ν
ZMK_UNICODE_PAIR(el_xi      ,    N0 , N3 , B ,  E ,    N0 , N3 , N9 ,  E) // ξ/Ξ
ZMK_UNICODE_PAIR(el_omikron ,    N0 , N3 , B ,  F ,    N0 , N3 , N9 ,  F) // ο/Ο
ZMK_UNICODE_PAIR(el_pi      ,    N0 , N3 , C , N0 ,    N0 , N3 ,  A , N0) // π/Π
ZMK_UNICODE_PAIR(el_rho     ,    N0 , N3 , C , N1 ,    N0 , N3 ,  A , N1) // ρ/Ρ
ZMK_UNICODE_PAIR(el_sigma   ,    N0 , N3 , C , N3 ,    N0 , N3 ,  A , N3) // σ/Σ
ZMK_UNICODE_PAIR(el_tau     ,    N0 , N3 , C , N4 ,    N0 , N3 ,  A , N4) // τ/Τ
ZMK_UNICODE_PAIR(el_upsilon ,    N0 , N3 , C , N5 ,    N0 , N3 ,  A , N5) // υ/Υ
ZMK_UNICODE_PAIR(el_phi     ,    N0 , N3 , C , N6 ,    N0 , N3 ,  A , N6) // φ/Φ
ZMK_UNICODE_PAIR(el_chi     ,    N0 , N3 , C , N7 ,    N0 , N3 ,  A , N7) // χ/Χ
ZMK_UNICODE_PAIR(el_psi     ,    N0 , N3 , C , N8 ,    N0 , N3 ,  A , N8) // ψ/Ψ
ZMK_UNICODE_PAIR(el_omega   ,    N0 , N3 , C , N9 ,    N0 , N3 ,  A , N9) // ω/Ω

MAKE_HRM(hm_phi, &sk, &el_phi)
MAKE_HRM(hm_xi, &sk, &el_xi)

ZMK_LAYER(gre,
//╭───╮ ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮             ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮ ╭───╮
   _X_   _X_               _X_               &el_epsilon       &el_rho           &el_tau                     &el_upsilon       &el_theta         &el_iota          &el_omikron       &el_pi          _X_
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &el_alpha         &el_sigma         &el_delta         &hm_phi LSHFT 0   &el_gamma                   &el_eta           &hm_xi LSHFT 0    &el_kappa         &el_lambda        _X_             _X_
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
//
//├───┤ ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤             ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤ ├───┤
   _X_   &el_zeta          &el_chi           &el_psi           &el_omega         &el_beta                    &el_nu            &el_mu            _X_               _X_               _X_             _X_
//╰───╯ ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯             ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯ ╰───╯
//                                                            ╭─────────────┬───┬─────────────╮ ╭───╮ ╭───╮ ╭─────────────┬───┬─────────────╮
                                                               ___               ___             _X_   _X_   ___               ___
//                                                            ╰─────────────┴───┴─────────────╯ ╰───╯ ╰───╯ ╰─────────────┴───┴─────────────╯
)
