//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯

/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ xxx LT3 LT2 xxx xxx │         │ xxx xxx RT2 RT3 xxx │
  │ LM4 LM3 LM2 LM1 xxx │         │ xxx RM1 RM2 RM3 RM4 │
  │ xxx xxx xxx LB1 xxx ╰───╮ ╭───╯ xxx RB1 xxx xxx xxx │
  ╰───────────╮ LH2 LH1 xxx │ │ xxx RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */

// TODO: 优化 DEF 层标点符号
// TODO: 优化 hold_kp 按键持续时间过短的问题
// TODO: 添加 &key_repeat 键
// TODO: 添加 Fn / GLOBAL 键
// TODO: 添加 F1 - F12 键

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/helper.h"

// 主层，与副层共同完成所有非功能性输入
#define DEF 0

// 副层，与主层共同完成所有非功能性输入
#define SYM 1
#define NUM 2

// 零时层, 放置临时快捷键
#define TMP 3

// 功能层，放置功能快捷键
#define FUN 4

// 控制层
#define BLU 5

//////////////////////////////
// Global Behaviors
//////////////////////////////

#define ___ &trans
#define _x_ &none
#define xxx &none

#define TAP_MS 200
#define SHORT_TAP_MS 165

// use require-prior-idle-ms for combos
#undef COMBO_HOOK
#define COMBO_HOOK require-prior-idle-ms = <200>;

#undef COMBO_TERM
#define COMBO_TERM 30

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&sl {
    release-after-ms = <5000>;
    // quick-release;
};

&sk {
    release-after-ms = <5000>;
    // quick-release;
};

#define MAKE_HRM(NAME, HOLD, TAP)         \
    ZMK_BEHAVIOR(NAME, hold_tap,          \
        flavor = "balanced";              \
        tapping-term-ms = <TAP_MS>;       \
        quick-tap-ms = <TAP_MS>;          \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>;         \
    )
MAKE_HRM(hold_kp, &kp, &kp)
MAKE_HRM(hold_sk, &sk, &kp)

#define SIMPLE_DANCE(NAME, BINDING1, BINDING2) \
    ZMK_BEHAVIOR(NAME, tap_dance,              \
        tapping-term-ms = <TAP_MS>;            \
        bindings = <BINDING1>, <BINDING2>;     \
    )

// SIMPLE_DANCE(esc_tab     ,  &kp ESC       , &kp TAB      ) // Esc             / Tab
// SIMPLE_DANCE(sw_lg       ,  &kp LC(SPACE) , &caps_word   ) // Switch Language / Caps Lock
// SIMPLE_DANCE(del_bspc    ,  &kp DEL       , &kp BSPC     ) // Delete          / Backspace
// SIMPLE_DANCE(ret_enter   ,  &kp RET2      , &kp ENTER    ) // Return          / Enter

// DEF
SIMPLE_DANCE(comma_semi  , &kp COMMA , &kp SEMI     ) // , (б) / ; (ж)
SIMPLE_DANCE(dot_colon   , &kp DOT   , &kp COLON    ) // . (ю) / :

// LEFT
SIMPLE_DANCE(lt_gt       , &kp LT    , &kp GT       ) // < / >
SIMPLE_DANCE(lpar_rpar   , &kp LPAR  , &kp RPAR     ) // ( / )

SIMPLE_DANCE(grave_tilde , &kp GRAVE , &kp TILDE    ) // ` / ~
SIMPLE_DANCE(minus_plus  , &kp MINUS , &kp PLUS     ) // - / +
SIMPLE_DANCE(fslh_star   , &kp FSLH  , &kp STAR     ) // / / *
SIMPLE_DANCE(under_equal , &kp UNDER , &kp EQUAL    ) // _ / =

SIMPLE_DANCE(hash_prcnt  , &kp HASH  , &kp PRCNT    ) // # / %

// RIGHT
SIMPLE_DANCE(lbkt_rbkt   , &kp LBKT  , &kp RBKT     ) // [ (х) / ] (ъ)
SIMPLE_DANCE(lbrc_rbrc   , &kp LBRC  , &kp RBRC     ) // { / }

SIMPLE_DANCE(apos_aposs  , &kp APOS  , &kp LS(APOS) ) // ' (э) / "
SIMPLE_DANCE(dllr_caret  , &kp DLLR  , &kp CARET    ) // $ / ^
SIMPLE_DANCE(amps_pipe   , &kp AMPS  , &kp PIPE     ) // & / |
SIMPLE_DANCE(excl_qmark  , &kp EXCL  , &kp QMARK    ) // ! / ?

SIMPLE_DANCE(bslh_at     , &kp BSLH  , &kp AT       ) // \ (ё) / @

//////////////////////////////
// DEF
//////////////////////////////

////////////////////
// "|" combos
////////////////////

// ZMK_COMBO(_     , &kp 0              , LT3 LM3 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , LT2 LM2 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RT2 RM2 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RT3 RM3 , DEF , COMBO_TERM)

// ZMK_COMBO(_     , &kp 0              , LM1 LB1 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RM1 RB1 , DEF , COMBO_TERM)

// ZMK_COMBO(_     , &kp 0              , LH2 LH1 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RH1 RH2 , DEF , COMBO_TERM)

////////////////////
// "-" combos
////////////////////

// 1st row
// ZMK_COMBO(esc   , &kp ESC            , LT3 LT2 , DEF , COMBO_TERM)
// ZMK_COMBO(bspc  , &kp BSPC           , RT2 RT3 , DEF , COMBO_TERM)

// 2nd row
// ZMK_COMBO(_     , &kp 0              , LM4 LM3 , DEF , COMBO_TERM)
ZMK_COMBO(c_s   , &comma_semi        , LM3 LM2 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , LM2 LM1 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RM1 RM2 , DEF , COMBO_TERM)
ZMK_COMBO(d_c   , &dot_colon         , RM2 RM3 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RM3 RM4 , DEF , COMBO_TERM)

ZMK_COMBO(c_w   , &caps_word         , LM1 RM1 , DEF , COMBO_TERM)

ZMK_LAYER(DEF,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               &kp Q             &hold_kp LA(V) W  &hold_kp LA(Z) E  &kp R             &kp T                                           &kp Y             &kp U             &kp I             &kp O             &kp P             xxx
//                                                   _-_                                                                                                                                       _-_
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//                                          _|_               _|_                                                                                                                     _|_               _|_
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &hold_sk LGUI A   &hold_sk LALT S   &hold_sk LCTRL D  &hold_sk LSHFT F  &kp G                                           &kp H             &hold_sk LSHFT J  &hold_sk LCTRL K  &hold_sk LALT L   &hold_sk LGUI 0   xxx
//                                 _-_           , (б) / ; (ж)         _-_                                                                                                   _-_          . (ю) / :              _-_
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//                                                                              _|_                                                                                 _|_
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               &kp Z             &kp X             xxx               &kp V             &kp B                                           &kp N             &kp M             xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &lt SYM 0         &lt NUM C       xxx                       xxx   &lt TMP 0         &lt FUN SPACE
//                                                                                       _|_                                                               _|_
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// SYM
//////////////////////////////

MAKE_HRM(hm_g_t , &sk , &grave_tilde)
MAKE_HRM(hm_m_p , &sk , &minus_plus )
MAKE_HRM(hm_f_s , &sk , &fslh_star  )
MAKE_HRM(hm_u_e , &sk , &under_equal)

MAKE_HRM(hm_a_a , &sk , &apos_aposs )
MAKE_HRM(hm_d_c , &sk , &dllr_caret )
MAKE_HRM(hm_a_p , &sk , &amps_pipe  )
MAKE_HRM(hm_e_q , &sk , &excl_qmark )

ZMK_LAYER(SYM,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &lt_gt            &lpar_rpar        xxx               xxx                                             xxx               xxx               &lbkt_rbkt        &lbrc_rbrc        xxx               xxx
//                                                                                                                                                                                    х / ъ
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &hm_g_t LGUI 0    &hm_m_p LALT 0    &hm_f_s LCTRL 0   &hm_u_e LSHFT 0   xxx                                             xxx               &hm_a_a LSHFT 0   &hm_d_c LCTRL 0   &hm_a_p LALT 0    &hm_e_q LGUI 0    xxx
//                                                                                                                                                                   э
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &hash_prcnt       xxx                                             xxx               &bslh_at          xxx               xxx               xxx               xxx
//                                                                                                                                                                   ё
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               _x_             xxx                       xxx   &kp BSPC          &kp ENTER
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// NUM
//////////////////////////////

ZMK_LAYER(NUM,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               _x_               _x_               xxx               xxx                                             xxx               xxx               _x_               _x_               xxx               xxx
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &kp N1            &kp N2            &kp N3            &kp N4            xxx                                             xxx               &kp N7            &kp N8            &kp N9            &kp N0            xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &kp N5            xxx                                             xxx               &kp N6            xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           _x_               ___             xxx                       xxx   _x_               _x_
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// TMP
//////////////////////////////

ZMK_LAYER(TMP,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               _x_               _x_               xxx               xxx                                             xxx               xxx               _x_               _x_               xxx               xxx
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               _x_               xxx                                             xxx               _x_               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           _x_               _x_             xxx                       xxx   ___               _x_
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// FUN
//////////////////////////////

SIMPLE_DANCE(vol_prev_pp , &kp C_PREV   , &kp C_PP)
SIMPLE_DANCE(vol_dn_mute , &kp C_VOL_DN , &kp C_MUTE)

SIMPLE_DANCE(left_home  , &kp LEFT  , &kp HOME)
SIMPLE_DANCE(down_pg_dn , &kp DOWN  , &kp PG_DN)
SIMPLE_DANCE(up_pg_up   , &kp UP    , &kp PG_UP)
SIMPLE_DANCE(right_end  , &kp RIGHT , &kp END)

ZMK_LAYER(FUN,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &kp C_BRI_UP      &kp C_VOL_UP      xxx               xxx                                             xxx               xxx               _x_               _x_               xxx               xxx
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               &kp C_BRI_DN      &vol_dn_mute      &kp C_NEXT        xxx                                             xxx               &down_pg_dn       &up_pg_up         &right_end        &kp LG(LC(Q))     xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &vol_prev_pp      xxx                                             xxx               &left_home        xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &kp ESC           &kp TAB         xxx                       xxx   _x_               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// BLU
//////////////////////////////

#if CONFIG_WIRELESS

#include <dt-bindings/zmk/bt.h>

ZMK_CONDITIONAL_LAYER(NUM TMP, BLU)

ZMK_LAYER(BLU,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &bt BT_CLR        &bootloader       xxx               xxx                                             xxx               xxx               &bootloader       &bt BT_CLR        xxx               xxx
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4      xxx                                             xxx               &bt BT_SEL 7      &bt BT_SEL 8      &bt BT_SEL 9      &bt BT_SEL 0      xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &bt BT_SEL 5      xxx                                             xxx               &bt BT_SEL 6      xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               _x_             xxx                       xxx   _x_               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

#else

ZMK_LAYER(BLU,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &bt BT_CLR        &bootloader       xxx               xxx                                             xxx               xxx               &bootloader       &bt BT_CLR        xxx               xxx
//├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               _x_               xxx                                             xxx               _x_               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               _x_             xxx                       xxx   _x_               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
)

#endif

// ZMK_BEHAVIOR(smart_0, mod_morph,
//     bindings = <&kp N0>, <&kp 0>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_1, mod_morph,
//     bindings = <&kp N1>, <&kp F1>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_2, mod_morph,
//     bindings = <&kp N2>, <&kp F2>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_3, mod_morph,
//     bindings = <&kp N3>, <&kp F3>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_4, mod_morph,
//     bindings = <&kp N4>, <&kp F4>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_5, mod_morph,
//     bindings = <&kp N5>, <&kp F5>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_6, mod_morph,
//     bindings = <&kp N6>, <&kp F6>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_7, mod_morph,
//     bindings = <&kp N7>, <&kp F7>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_8, mod_morph,
//     bindings = <&kp N8>, <&kp F8>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_9, mod_morph,
//     bindings = <&kp N9>, <&kp F9>;
//     mods = <(MOD_LSFT)>;
// )
//
// ZMK_BEHAVIOR(_smart_grave, macro,
//     bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_grave, tap_dance,
//     bindings = <&kp GRAVE>, <&_smart_grave>;
// )
//
// ZMK_BEHAVIOR(_smart_aps, macro,
//     bindings = <&kp APOS &kp APOS &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_aps, tap_dance,
//     bindings = <&kp APOS>, <&_smart_aps>;
// )
//
// ZMK_BEHAVIOR(_smart_apss, macro,
//     bindings = <&kp LS(APOS) &kp LS(APOS) &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_apss, tap_dance,
//     bindings = <&kp LS(APOS)>, <&_smart_apss>;
// )
//
// ZMK_BEHAVIOR(_smart_par, macro,
//     bindings = <&kp LPAR &kp RPAR &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_par, tap_dance,
//     bindings = <&kp LPAR>, <&_smart_par>;
// )
//
// ZMK_BEHAVIOR(_smart_bkt, macro,
//     bindings = <&kp LBKT &kp RBKT &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_bkt, tap_dance,
//     bindings = <&kp LBKT>, <&_smart_bkt>;
// )
//
// ZMK_BEHAVIOR(_smart_brc, macro,
//     bindings = <&kp LBRC &kp RBRC &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_brc, tap_dance,
//     bindings = <&kp LBRC>, <&_smart_brc>;
// )
//
// ZMK_BEHAVIOR(_smart_thn, macro,
//     bindings = <&kp LT &kp GT &kp LEFT>;
// )
// ZMK_BEHAVIOR(smart_thn, tap_dance,
//     bindings = <&kp LT>, <&_smart_thn>;
// )

//////////////////////////////
// RHT
//////////////////////////////

// ZMK_LAYER(RHT,
// //╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮                                 ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
//    xxx               xxx               &kp TILDE         &kp CARET         xxx               xxx                                             xxx               xxx               &kp PIPE          &kp LS(APOS)      xxx               xxx
// //├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────╯   ├─────────────┼───┼─────────────┤   ╰─────────────┴───┼─────────────┤
// //├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
//    xxx               &hold_sk LGUI PLUS &hold_sk LALT STAR &hold_sk LCTRL EQUAL &hold_sk LSHFT RPAR xxx                                      xxx               &hold_sk LSHFT RBKT &hold_sk LCTRL SEMI &hold_sk LALT COLON &hold_sk LGUI QMARK xxx
// //                                                                                                                                                                 ъ / Ъ             ж / Ж
// //├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
// //├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
//    xxx               xxx               xxx               xxx               &kp GT            xxx                                             xxx               &kp RBRC          xxx               xxx               xxx               xxx
// //╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
// //                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────────────────────╮ ╭─────────────┬───┬─────────────╮
//                                                                            &kp AT            &kp HASH        xxx                       xxx   _x_               ___
// //                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────────────────────╯ ╰─────────────┴───┴─────────────╯
// )
