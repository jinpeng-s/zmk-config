#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "../zmk-nodefree-config/helper.h"

#include "extra_keys.h"

#define DEF 0
#define SYM 1
#define APP 2
#define SYS 3
#define NAV 4
#define BLU 5

#define _X_ &none
#define ___ &trans

#define KEYS_L LT0 LT1 LT2 LT3 LT4         LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4         RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS             LH2 LH1 LH0 RH0 RH1 RH2                                  // thumbs

#define TAP_MS 175
#define SHORT_TAP_MS 100

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&sk {
    release-after-ms = <1000>;
    quick-release;
};

// ---------- base ----------

ZMK_BEHAVIOR(fslh_bslh, mod_morph,
    bindings = <&kp FSLH>, <&kp BSLH>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(com_sem, mod_morph,
    bindings = <&kp COMMA>, <&kp SEMICOLON>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(dot_col, mod_morph,
    bindings = <&kp DOT>, <&kp COLON>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(qma_exc, mod_morph,
    bindings = <&kp QMARK>, <&kp EXCL>;
    mods = <(MOD_LSFT)>;
)

// Home Row Mod

#define MAKE_HRM(NAME, HOLD, TAP) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <TAP_MS>; \
        quick-tap-ms = <TAP_MS>; \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>; \
    )

MAKE_HRM(hm, &sk, &kp)
MAKE_HRM(hm_slh, &sk, &fslh_bslh)

// TODO: Caps Word

/ {
    behaviors {
        g_capsword: g_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "g_capsword";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_MS>;
            bindings = <&kp G>, <&kp G>, <&caps_word>;
        };
    };
};

ZMK_LAYER(base,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     &kp Q         &kp W         &kp E         &kp R         &kp T                       &kp Y         &kp U         &kp I         &kp O         &kp P           _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &hm LGUI A    &hm LALT S    &hm LCTRL D   &hm LSHFT F   &g_capsword                 &kp H         &hm LSHFT J   &hm LCTRL K   &hm LALT L    &hm_slh LGUI 0  _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp Z         &kp X         &kp C         &kp V         &kp B                       &kp N         &kp M         &com_sem      &dot_col      &qma_exc        _X_
//╰─────╯ ╰─────────────┼─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯ ╰─────╯
                                                      &lt SYM SPACE &lt APP TAB   _X_     _X_   &lt SYS BSPC  &lt NAV RET
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- sym ----------

ZMK_BEHAVIOR(plus_equal, mod_morph,
    bindings = <&kp PLUS>, <&kp EQUAL>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(minus_under, mod_morph,
    bindings = <&kp MINUS>, <&kp UNDER>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(l_par_brc, mod_morph,
    bindings = <&kp LPAR>, <&kp LBRC>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(r_par_brc, mod_morph,
    bindings = <&kp RPAR>, <&kp RBRC>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(l_bkt_thn, mod_morph,
    bindings = <&kp LBKT>, <&kp LT>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(useless_apos, mod_morph,
    bindings = <&kp APOS>, <&kp APOS>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(r_bkt_thn, mod_morph,
    bindings = <&kp RBKT>, <&kp GT>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(grave_tilde, mod_morph,
    bindings = <&kp GRAVE>, <&kp TILDE>;
    mods = <(MOD_LSFT)>;
)

ZMK_LAYER(sym,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     &plus_equal   &kp N7        &kp N8        &kp N9        &kp CARET                   &kp DLLR      &l_par_brc    &r_par_brc    &l_bkt_thn    &r_bkt_thn      _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &hm LGUI N0   &hm LALT N4   &hm LCTRL N5  &hm LSHFT N6  &kp STAR                    &kp AT        &hm LSHFT HASH &hm LCTRL AMPS &hm LALT PIPE ___           _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &minus_under  &kp N1        &kp N2        &kp N3        &kp PRCNT                   &grave_tilde  &useless_apos ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      _X_           ___           _X_     _X_   ___           ___
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- app ----------

ZMK_BEHAVIOR(cs_area, mod_morph,
    bindings = <&kp LA(LS(N1))>, <&kp LA(LS(N6))>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(cs_win, mod_morph,
    bindings = <&kp LA(LS(N3))>, <&kp LA(LS(N2))>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(cs_fun, mod_morph,
    bindings = <&kp LA(LS(N5))>, <&kp LA(LS(N4))>;
    mods = <(MOD_LSFT)>;
)

MAKE_HRM(hm_win, &sk, &cs_win)

ZMK_LAYER(app,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     &kp BSPC      &cs_area      ___           ___           &kp LG(LS(SPACE))           ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp RET       &hm_win LALT  ___           &hm LSHFT LG(LS(F)) ___                   ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp ESC       &cs_fun       &kp LG(LS(C)) ___           ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      ___           _X_           _X_     _X_   ___           ___
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- sys ----------

ZMK_LAYER(sys,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     ___           ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     ___           ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     ___           ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      ___           ___           _X_     _X_   _X_           ___
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- nav ----------

ZMK_LAYER(nav,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     ___           ___           &kp C_BRI_DN  &kp C_BRI_UP  ___                         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp C_MUTE    &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT                  &mt HOME LEFT &mt PG_DN DOWN &mt PG_UP UP &mt END RIGHT ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     ___           ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      ___           ___           _X_     _X_   ___           _X_
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- blu ----------

#if CONFIG_WIRELESS
    #include <dt-bindings/zmk/bt.h>

    ZMK_CONDITIONAL_LAYER(APP SYS, BLU)

    ZMK_LAYER(blu,
    //╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
        _X_     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                  &bt BT_CLR    &bt BT_SEL 4  &bt BT_SEL 5  &bt BT_SEL 6  &bt BT_SEL 7    _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &bootloader                 &bootloader   ___           ___           ___           ___             _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &sys_reset                  &sys_reset    ___           ___           ___           ___             _X_
    //╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                          ___           ___           _X_     _X_   ___           ___
    //                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
    )

#else

    ZMK_LAYER(blu,
    //╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
        _X_     &trans        &trans        &trans        &trans        &trans                      &trans        &trans        &trans        &trans        &trans          _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &bootloader                 &bootloader   ___           ___           ___           ___             _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &sys_reset                  &sys_reset    ___           ___           ___           ___             _X_
    //╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                          ___           ___           _X_     _X_   ___           ___
    //                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
    )

#endif
