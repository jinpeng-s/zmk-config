//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯

/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 xxx │         │ xxx RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 xxx │         │ xxx RM1 RM2 RM3 RM4 │
  │ xxx xxx xxx LB1 xxx ╰───╮ ╭───╯ xxx RB1 xxx xxx xxx │
  ╰───────────╮ LH2 LH1 xxx │ │ xxx RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/helper.h"

// 主层，与副层共同完成所有非功能性输入
#define DEF 0

#define LFT 1
#define RHT 2

// 副层，与主层共同完成所有非功能性输入
#define SEC 3

// 功能层，放置功能快捷键
#define FUN 4

// 测试层，放置测试快捷键
#define TMP 5

// 导航层，放置导航快捷键
#define NAV 6

// 控制层
#define BLU 7

//////////////////////////////
// Global Behaviors
//////////////////////////////

#define ___ &trans
#define _x_ &none
#define xxx &none

#define TAP_MS 200
#define SHORT_TAP_MS 165

// use require-prior-idle-ms for combos
#undef COMBO_HOOK
#define COMBO_HOOK require-prior-idle-ms = <200>;

#undef COMBO_TERM
#define COMBO_TERM 30

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&sl {
    release-after-ms = <3000>;
    // quick-release;
};

&sk {
    release-after-ms = <3000>;
    // quick-release;
};

#define MAKE_HRM(NAME, HOLD, TAP)         \
    ZMK_BEHAVIOR(NAME, hold_tap,          \
        flavor = "balanced";              \
        tapping-term-ms = <TAP_MS>;       \
        quick-tap-ms = <TAP_MS>;          \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>;         \
    )
MAKE_HRM(hold_kp, &kp, &kp)
MAKE_HRM(hold_sk, &sk, &kp)
MAKE_HRM(hold_sl, &sk, &sl)

#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_BEHAVIOR(NAME, mod_morph, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

ZMK_BEHAVIOR(_smart_grave, macro,
    bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
)
ZMK_BEHAVIOR(smart_grave, tap_dance,
    bindings = <&kp GRAVE>, <&_smart_grave>;
)

ZMK_BEHAVIOR(_smart_aps, macro,
    bindings = <&kp APOS &kp APOS &kp LEFT>;
)
ZMK_BEHAVIOR(smart_aps, tap_dance,
    bindings = <&kp APOS>, <&_smart_aps>;
)

ZMK_BEHAVIOR(_smart_par, macro,
    bindings = <&kp LPAR &kp RPAR &kp LEFT>;
)
ZMK_BEHAVIOR(smart_par, tap_dance,
    bindings = <&kp LPAR>, <&_smart_par>;
)

ZMK_BEHAVIOR(_smart_bkt, macro,
    bindings = <&kp LBKT &kp RBKT &kp LEFT>;
)
ZMK_BEHAVIOR(smart_bkt, tap_dance,
    bindings = <&kp LBKT>, <&_smart_bkt>;
)

ZMK_BEHAVIOR(_smart_brc, macro,
    bindings = <&kp LBRC &kp RBRC &kp LEFT>;
)
ZMK_BEHAVIOR(smart_brc, tap_dance,
    bindings = <&kp LBRC>, <&_smart_brc>;
)

ZMK_BEHAVIOR(_smart_thn, macro,
    bindings = <&kp LT &kp GT &kp LEFT>;
)
ZMK_BEHAVIOR(smart_thn, tap_dance,
    bindings = <&kp LT>, <&_smart_thn>;
)

// SIMPLE_MORPH(esc_tab     , SFT , &kp ESC       , &kp TAB      ) // Esc             / Tab
// SIMPLE_MORPH(sw_lg       , SFT , &kp LC(SPACE) , &caps_word   ) // Switch Language / Caps Lock
// SIMPLE_MORPH(del_bspc    , SFT , &kp DEL       , &kp BSPC     ) // Delete          / Backspace
// SIMPLE_MORPH(ret_enter   , SFT , &kp RET2      , &kp ENTER    ) // Return          / Enter

// 拇指
// SIMPLE_MORPH(lpar_rpar   , SFT , &smart_par    , &kp RPAR     ) // ( / ) / ()
// SIMPLE_MORPH(lbkt_rbkt   , SFT , &smart_bkt    , &kp RBKT     ) // [ / ] / []
// SIMPLE_MORPH(lbrc_rbrc   , SFT , &smart_brc    , &kp RBRC     ) // { / } / {}
// SIMPLE_MORPH(lt_gt       , SFT , &smart_thn    , &kp GT       ) // < / > / <>

// 左手
// SIMPLE_MORPH(grave_tilde , SFT , &smart_grave  , &kp TILDE    ) // ` / ~ / ``
// SIMPLE_MORPH(under_equal , SFT , &kp UNDER     , &kp EQUAL    ) // _ / =
//
// SIMPLE_MORPH(minus_plus  , SFT , &kp MINUS     , &kp PLUS     ) // - / +
// SIMPLE_MORPH(fslh_star   , SFT , &kp FSLH      , &kp STAR     ) // / / *
//
// SIMPLE_MORPH(hash_prcnt  , SFT , &kp HASH      , &kp PRCNT    ) // # / %

// 右手
// SIMPLE_MORPH(amper_pipe  , SFT , &kp AMPS      , &kp PIPE     ) // & / |
// SIMPLE_MORPH(dllr_caret  , SFT , &kp DLLR      , &kp CARET    ) // $ / ^
//
// SIMPLE_MORPH(excl_qmark  , SFT , &kp EXCL      , &kp QMARK    ) // ! / ?
// SIMPLE_MORPH(aps_quot    , SFT , &smart_aps    , &kp LS(APOS) ) // ' / " / ''
//
// SIMPLE_MORPH(bslh_AT     , SFT , &kp BSLH      , &kp AT       ) // \ / @

// 主键盘
// SIMPLE_MORPH(comma_semi  , SFT , &kp COMMA     , &kp SEMI     ) // , / ;
// SIMPLE_MORPH(dot_colon   , SFT , &kp DOT       , &kp COLON    ) // . / :

//////////////////////////////
// ---------- DEF ----------
//////////////////////////////

////////////////////
// "\" combos
////////////////////

ZMK_COMBO(z     , &kp Z              , LT4 LM4 , DEF , COMBO_TERM)  // !!!
ZMK_COMBO(x     , &kp X              , LT3 LM3 , DEF , COMBO_TERM)
ZMK_COMBO(c     , &kp C              , LT2 LM2 , DEF , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , LT1 LM1 , SEC , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RT1 RM1 , SEC , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RT2 RM2 , SEC , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RT3 RM3 , SEC , COMBO_TERM)

// ZMK_COMBO(_     , &kp 0              , LM1 LB1 , SEC , COMBO_TERM)
// ZMK_COMBO(_     , &kp 0              , RM1 RB1 , SEC , COMBO_TERM)

////////////////////
// "-" combos
////////////////////

ZMK_COMBO(colon , &kp COLON          , LT3 LT2 , DEF , COMBO_TERM)
ZMK_COMBO(semi  , &kp SEMI           , LT2 LT1 , DEF , COMBO_TERM)

ZMK_COMBO(comma , &kp COMMA          , RT1 RT2 , DEF , COMBO_TERM)
ZMK_COMBO(dot   , &kp DOT            , RT2 RT3 , DEF , COMBO_TERM)

ZMK_LAYER(DEF,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               &kp Q             &hold_kp LA(Z) W  &hold_kp LA(V) E  &kp R             xxx                                             xxx               &kp U             &kp I             &kp O             &kp P             xxx
//                                                    :                 ;                                                                                                     ,                 .
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//                         Z                 X                 C                _x_                                                                                 _x_               _x_               _x_
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &hold_sl LGUI LFT &hold_sk LALT S   &hold_sk LCTRL D  &hold_sk LSHFT F  &kp T                                           &kp Y             &hold_sk LSHFT J  &hold_sk LCTRL K  &hold_sk LALT L   &hold_sl LGUI RHT xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//                                                                              _x_                                                                                 _x_
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &kp V             &kp G                                           &kp M             &kp H             xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &lt SEC SPACE     &lt FUN B       xxx             xxx             &lt TMP N         &lt NAV A
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// LFT
//////////////////////////////

ZMK_LAYER(LFT,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &kp ESC           &smart_grave      &kp UNDER         xxx                                             xxx               &kp AMPS          &kp DLLR          &kp BSPC          xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               &kp LC(SPACE)     &kp MINUS         &kp FSLH          xxx                                             xxx               &kp EXCL          &smart_aps        &kp ENTER         _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &kp HASH          xxx                                             xxx               &kp BSLH          xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &smart_par        &smart_bkt      xxx             xxx             &smart_brc        &smart_thn
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// RHT
//////////////////////////////

ZMK_LAYER(RHT,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &kp TAB           &kp TILDE         &kp EQUAL         xxx                                             xxx               &kp PIPE          &kp CARET         &kp DEL           xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               &caps_word        &kp PLUS          &kp STAR          xxx                                             xxx               &kp QMARK         &kp LS(APOS)      &kp RET2          _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &kp PRCNT         xxx                                             xxx               &kp AT            xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &kp RPAR          &kp RBKT        xxx             xxx             &kp RBRC          &kp GT
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- SEC ----------
//////////////////////////////

ZMK_LAYER(SEC,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &kp N1            &kp N2            &kp N3            &hold_sk LSHFT N4 xxx                                             xxx               &hold_sk LSHFT N7 &kp N8            &kp N9            &kp N0            xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &kp N5            xxx                                             xxx               &kp N6            xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           _x_               ___             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- FUN ----------
//////////////////////////////

SIMPLE_MORPH(vol_prev_pp, SFT, &kp C_PREV, &kp C_PP)
SIMPLE_MORPH(vol_dn_mute, SFT, &kp C_VOL_DN, &kp C_MUTE)

ZMK_LAYER(FUN,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               _x_               _x_               _x_               xxx                                             xxx               &kp C_NEXT        &kp C_VOL_UP      &kp C_BRI_UP      xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &kp LG(LS(SPACE)) &kp LG(LS(C))     _x_               &kp LG(LS(F))     xxx                                             xxx               &vol_prev_pp      &vol_dn_mute      &kp C_BRI_DN      &kp LG(LC(Q))     xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               _x_               xxx                                             xxx               _x_               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               _x_             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- TMP ----------
//////////////////////////////

ZMK_LAYER(TMP,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               _x_               xxx                                             xxx               _x_               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             _x_               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- NAV ----------
//////////////////////////////

SIMPLE_MORPH(left_home  , SFT , &kp LEFT  , &kp HOME)
SIMPLE_MORPH(down_pg_dn , SFT , &kp DOWN  , &kp PG_DN)
SIMPLE_MORPH(up_pg_up   , SFT , &kp UP    , &kp PG_UP)
SIMPLE_MORPH(right_end  , SFT , &kp RIGHT , &kp END)

MAKE_HRM(hold_down_pg_dn, &sk, &down_pg_dn)

ZMK_LAYER(NAV,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               &down_pg_dn       &up_pg_up         &right_end        _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               _x_               xxx                                             xxx               &left_home        xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             ___               _x_
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- BLU ----------
//////////////////////////////

#if CONFIG_WIRELESS

#include <dt-bindings/zmk/bt.h>

ZMK_CONDITIONAL_LAYER(FUN TMP, BLU)

ZMK_LAYER(BLU,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &sys_reset        &bt BT_CLR        &bootloader       xxx                                             xxx               &bootloader       &bt BT_CLR        &sys_reset        xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4      xxx                                             xxx               &bt BT_SEL 7      &bt BT_SEL 8      &bt BT_SEL 9      &bt BT_SEL 0      xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               &bt BT_SEL 5      xxx                                             xxx               &bt BT_SEL 6      xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

#else

ZMK_LAYER(BLU,
//╭─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────┬───┬─────────────╮
   xxx               xxx               &sys_reset        &bt BT_CLR        &bootloader       xxx                                             xxx               &bootloader       &bt BT_CLR        &sys_reset        xxx               xxx
//├─────────────┤───┴─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────┴───├─────────────┤
//├─────────────┤   ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┬─────────────╮   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤   ├─────────────┤                                 ├─────────────┤   ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               _x_               xxx                                             xxx               _x_               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

#endif

// ZMK_BEHAVIOR(smart_0, mod_morph,
//     bindings = <&kp N0>, <&kp 0>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_1, mod_morph,
//     bindings = <&kp N1>, <&kp F1>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_2, mod_morph,
//     bindings = <&kp N2>, <&kp F2>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_3, mod_morph,
//     bindings = <&kp N3>, <&kp F3>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_4, mod_morph,
//     bindings = <&kp N4>, <&kp F4>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_5, mod_morph,
//     bindings = <&kp N5>, <&kp F5>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_6, mod_morph,
//     bindings = <&kp N6>, <&kp F6>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_7, mod_morph,
//     bindings = <&kp N7>, <&kp F7>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_8, mod_morph,
//     bindings = <&kp N8>, <&kp F8>;
//     mods = <(MOD_LSFT)>;
// )
// ZMK_BEHAVIOR(smart_9, mod_morph,
//     bindings = <&kp N9>, <&kp F9>;
//     mods = <(MOD_LSFT)>;
// )
