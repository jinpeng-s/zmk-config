#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)

#include "../zmk-nodefree-config/helper.h"

#define DEF 0
#define SYM 1
#define APP 2
#define SYS 3
#define NAV 4
#define BLU 5

#include "extra_keys.h"
#include "combos.dtsi"

#define _X_ &none
#define ___ &trans

#define TAP_MS 175

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&sk {
    release-after-ms = <1000>;
    quick-release;
};

#define MAKE_HRM(NAME, HOLD, TAP) \
    ZMK_BEHAVIOR(NAME, hold_tap, \
        flavor = "balanced"; \
        tapping-term-ms = <TAP_MS>; \
        quick-tap-ms = <TAP_MS>; \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>; \
    )
MAKE_HRM(hm, &sk, &kp)

// ---------- base ----------

ZMK_BEHAVIOR(par, mod_morph,
    bindings = <&kp LPAR>, <&kp RPAR>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(bkt, mod_morph,
    bindings = <&kp LBKT>, <&kp RBKT>;
    mods = <(MOD_LSFT)>;
)

ZMK_BEHAVIOR(brc, mod_morph,
    bindings = <&kp LBRC>, <&kp RBRC>;
    mods = <(MOD_LSFT)>;
)

// Q W E R T   - U K - -
// A S D F G   - - K - -
// Z X C V B   - M - - -

// - - E R T   - - K - -
// - - D F -   - - - - -
// - - - - -   - - - - -

// Q W D F K   J U R L ;
// A S E T G   Y N I O H
// Z X C V B   P M , . /

ZMK_LAYER(base,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     &kp Q         &kp W         &kp E         &kp R         &kp T                       &kp J         &kp U         &kp K         &kp L         ___             _X_
//   -               BSPC             <             >                                                                                                CW
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
//   |      |             +             *             _             %                           ~             !             ,             .             @             `
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &hm LGUI A    &hm LALT S    &hm LCTRL D   &hm LSHFT F   &kp G                       &kp Y         &hm LSHFT N   &hm LCTRL I   &hm LALT O    &hm LGUI H      _X_
//   -                RET             '             "                                                                     {             }            CL
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
//   |      &             -             /             =             ^                           `             ?             ;             :             #
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp Z         &kp X         &kp C         &kp V         &kp B                       &kp P         &kp M         ___           ___           &kp BSLH        _X_
//   -                ESC             (             )                                                                     [             ]           ESC
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      &lt SYM SPACE &lt APP TAB   _X_     _X_   &lt SYS BSPC  &lt NAV RET
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- sym ----------

ZMK_LAYER(sym,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     ___           &kp N7        &kp N8        &kp N9        ___                         ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp N0        &kp N4        &kp N5        &kp N6        &kp DLLR                    ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     ___           &kp N1        &kp N2        &kp N3        ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      _X_           ___           _X_     _X_   ___           ___
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- app ----------

ZMK_LAYER(app,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     &kp LA(LS(N1)) &kp LA(LS(N6)) ___         ___           &kp LG(LS(SPACE))           ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp LA(LS(N3)) &kp LA(LS(N2)) ___         &kp LG(LS(F)) ___                         ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp LA(LS(N5)) &kp LA(LS(N4)) &kp LG(LS(C)) ___         ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      ___           _X_           _X_     _X_   ___           ___
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- sys ----------

ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)

ZMK_UNICODE_PAIR( de_ae,   N0, N0,  E, N4,   N0, N0,  C, N4 )
ZMK_UNICODE_PAIR( de_oe,   N0, N0,  F, N6,   N0, N0,  D, N6 )
ZMK_UNICODE_PAIR( de_ue,   N0, N0,  F,  C,   N0, N0,  D,  C )

ZMK_LAYER(sys,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     &euro_sign ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &de_oe     ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     ___           ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      ___           ___           _X_     _X_   _X_           ___
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- nav ----------

ZMK_LAYER(nav,
//╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
    _X_     ___           ___           &kp C_BRI_DN  &kp C_BRI_UP  ___                         &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     &kp C_MUTE    &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT                  &mt HOME LEFT &kp DOWN      &kp UP        &mt END RIGHT ___             _X_
//├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
    _X_     ___           ___           ___           ___           ___                         ___           ___           ___           ___           ___             _X_
//╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                      ___           ___           _X_     _X_   ___           _X_
//                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
)

// ---------- blu ----------

#if CONFIG_WIRELESS
    #include <dt-bindings/zmk/bt.h>

    ZMK_CONDITIONAL_LAYER(APP SYS, BLU)

    ZMK_LAYER(blu,
    //╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
        _X_     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                  &bt BT_CLR    &bt BT_SEL 4  &bt BT_SEL 5  &bt BT_SEL 6  &bt BT_SEL 7    _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &bootloader                 &bootloader   ___           ___           ___           ___             _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &sys_reset                  &sys_reset    ___           ___           ___           ___             _X_
    //╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                          ___           ___           _X_     _X_   ___           ___
    //                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
    )

#else

    ZMK_LAYER(blu,
    //╭─────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮             ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────╮
        _X_     &trans        &trans        &trans        &trans        &trans                      &trans        &trans        &trans        &trans        &trans          _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &bootloader                 &bootloader   ___           ___           ___           ___             _X_
    //├─────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤             ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────┤
        _X_     ___           ___           ___           ___           &sys_reset                  &sys_reset    ___           ___           ___           ___             _X_
    //╰─────╯ ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────╮ ╭─────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯ ╰─────╯
                                                          ___           ___           _X_     _X_   ___           ___
    //                                                  ╰─────────────┴─────────────┴─────╯ ╰─────┴─────────────┴─────────────╯
    )

#endif
