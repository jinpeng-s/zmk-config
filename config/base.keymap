//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯

/*                     KEY POSITIONS
  ╭─────────────────────╮         ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 xxx │         │ xxx RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │         │ RM0 RM1 RM2 RM3 RM4 │
  │ xxx xxx xxx xxx LB0 ╰───╮ ╭───╯ RB0 xxx xxx xxx xxx │
  ╰───────────╮ LH2 LH1 xxx │ │ xxx RH1 RH2 ╭───────────╯
              ╰─────────────╯ ╰─────────────╯          */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-nodefree-config/helper.h"

// 主层，与副层共同完成所有非功能性输入
#define DEF 0

// 副层，与主层共同完成所有非功能性输入
#define SEC 1

// 功能层，放置功能快捷键
#define FUN 2

// 测试层，放置测试快捷键
#define TMP 3

// 导航层，放置导航快捷键
#define NAV 4

// 控制层
#define BLU 5

//////////////////////////////
// Global Behaviors
//////////////////////////////

#define ___ &trans
#define _x_ &none
#define xxx &none

#define TAP_MS 200
#define SHORT_TAP_MS 165

// use require-prior-idle-ms for combos
#undef COMBO_HOOK
#define COMBO_HOOK require-prior-idle-ms = <200>;

#undef COMBO_TERM
#define COMBO_TERM 30

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <TAP_MS>;
    quick-tap-ms = <TAP_MS>;
};

&sk {
    release-after-ms = <1000>;
    quick-release;
};

#define MAKE_HRM(NAME, HOLD, TAP)         \
    ZMK_BEHAVIOR(NAME, hold_tap,          \
        flavor = "balanced";              \
        tapping-term-ms = <TAP_MS>;       \
        quick-tap-ms = <TAP_MS>;          \
        require-prior-idle-ms = <TAP_MS>; \
        bindings = <HOLD>, <TAP>;         \
    )
MAKE_HRM(leader, &sk, &kp)

#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_BEHAVIOR(NAME, mod_morph, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

//////////////////////////////
// ---------- DEF ----------
//////////////////////////////

// the missing 3rd row

SIMPLE_MORPH(_cmm, SFT, &kp COMMA, &kp SEMI)
SIMPLE_MORPH(_dot, SFT, &kp DOT, &kp COLON)
SIMPLE_MORPH(lang, SFT, &kp LC(SPACE), &caps_word)

ZMK_COMBO(z     , &kp Z              , LT4 LM4 , DEF , COMBO_TERM)
ZMK_COMBO(x     , &kp X              , LT3 LM3 , DEF , COMBO_TERM)
ZMK_COMBO(c     , &kp C              , LT2 LM2 , DEF , COMBO_TERM)
ZMK_COMBO(v     , &kp V              , LT1 LM1 , DEF , COMBO_TERM)
ZMK_COMBO(b     , &kp B              , LM0 LB0 , DEF , COMBO_TERM)

ZMK_COMBO(n     , &kp N              , RM0 RB0 , DEF , COMBO_TERM)
ZMK_COMBO(m     , &kp M              , RT1 RM1 , DEF , COMBO_TERM)
ZMK_COMBO(cmm   , &_cmm              , RT2 RM2 , DEF , COMBO_TERM)
ZMK_COMBO(dot   , &_dot              , RT3 RM3 , DEF , COMBO_TERM)
ZMK_COMBO(lang  , &lang              , RT4 RM4 , DEF , COMBO_TERM)

// left horizontal key

ZMK_BEHAVIOR(__smart_thn, macro,
    bindings = <&kp LT &kp GT &kp LEFT>;
)
ZMK_BEHAVIOR(_smart_thn, tap_dance,
    bindings = <&kp LT>, <&__smart_thn>;
)
SIMPLE_MORPH(smart_thn, SFT, &_smart_thn, &kp GT)

ZMK_BEHAVIOR(__smart_par, macro,
    bindings = <&kp LPAR &kp RPAR &kp LEFT>;
)
ZMK_BEHAVIOR(_smart_par, tap_dance,
    bindings = <&kp LPAR>, <&__smart_par>;
)
SIMPLE_MORPH(smart_par, SFT, &_smart_par, &kp RPAR)

ZMK_BEHAVIOR(__smart_bkt, macro,
    bindings = <&kp LBKT &kp RBKT &kp LEFT>;
)
ZMK_BEHAVIOR(_smart_bkt, tap_dance,
    bindings = <&kp LBKT>, <&__smart_bkt>;
)
SIMPLE_MORPH(smart_bkt, SFT, &_smart_bkt, &kp RBKT)

ZMK_BEHAVIOR(__smart_brc, macro,
    bindings = <&kp LBRC &kp RBRC &kp LEFT>;
)
ZMK_BEHAVIOR(_smart_brc, tap_dance,
    bindings = <&kp LBRC>, <&__smart_brc>;
)
SIMPLE_MORPH(smart_brc, SFT, &_smart_brc, &kp RBRC)

ZMK_COMBO(grave , &smart_grave       , LT4 LT3 , DEF , COMBO_TERM)
ZMK_COMBO(apos  , &smart_aps         , LM4 LM3 , DEF , COMBO_TERM)

ZMK_COMBO(lbkt  , &smart_bkt         , LT3 LT2 , DEF , COMBO_TERM)
ZMK_COMBO(lpar  , &smart_par         , LM3 LM2 , DEF , COMBO_TERM)

ZMK_COMBO(lbrc  , &smart_brc         , LT2 LT1 , DEF , COMBO_TERM)
ZMK_COMBO(lt    , &smart_thn         , LM2 LM1 , DEF , COMBO_TERM)

// right horizontal key

ZMK_BEHAVIOR(_smart_aps, macro,
    bindings = <&kp APOS &kp APOS &kp LEFT>;
)
ZMK_BEHAVIOR(smart_aps, tap_dance,
    bindings = <&kp APOS>, <&_smart_aps>;
)

ZMK_BEHAVIOR(_smart_grave, macro,
    bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
)
ZMK_BEHAVIOR(smart_grave, tap_dance,
    bindings = <&kp GRAVE>, <&_smart_grave>;
)

ZMK_COMBO(qmark , &kp QMARK          , RT1 RT2 , DEF , COMBO_TERM)
ZMK_COMBO(excl  , &kp EXCL           , RM1 RM2 , DEF , COMBO_TERM)

ZMK_COMBO(caret , &kp CARET          , RT2 RT3 , DEF , COMBO_TERM)
ZMK_COMBO(dllr  , &kp DLLR           , RM2 RM3 , DEF , COMBO_TERM)

ZMK_COMBO(pipe  , &kp PIPE           , RT3 RT4 , DEF , COMBO_TERM)
ZMK_COMBO(amps  , &kp AMPS           , RM3 RM4 , DEF , COMBO_TERM)

// leader key

ZMK_BEHAVIOR(alt_leader, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&lt SEC LA(V)>, <&kp LA(Z)>;
)

ZMK_BEHAVIOR(del_leader, mod_morph,
    bindings = <&lt TMP BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT)>;
)

ZMK_LAYER(DEF,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               &kp Q             &leader LA(V) W   &leader LA(Z) E   &kp R             xxx                                             xxx               &kp U             &kp I             &kp O             &kp P             xxx
//                                ` / ~             [ / ]             < / >                                                                                                   ?                 ^                 |
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//                         Z                 X                 C                 V                                                                                   M               , / ;             . / :          lang / caps word
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               &leader LGUI A    &leader LALT S    &leader LCTRL D   &leader LSHFT F   &kp T                                           &kp Y             &leader LSHFT J   &leader LCTRL K   &leader LALT L    &leader LGUI Z    xxx
//                                ' / "             ( / )             { / }                                                                                                   !                 $                 &
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//                                                                                                 V                                               N
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               &kp G                                           &kp H             xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           &lt SEC SPACE     &lt FUN ESC     xxx             xxx             &lt TMP BSPC      &lt NAV RET
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- SEC ----------
//////////////////////////////

// TODO: add Fn key

ZMK_BEHAVIOR(smart_0, mod_morph,
    bindings = <&kp N0>, <&kp 0>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_1, mod_morph,
    bindings = <&kp N1>, <&kp F1>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_2, mod_morph,
    bindings = <&kp N2>, <&kp F2>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_3, mod_morph,
    bindings = <&kp N3>, <&kp F3>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_4, mod_morph,
    bindings = <&kp N4>, <&kp F4>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_5, mod_morph,
    bindings = <&kp N5>, <&kp F5>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_6, mod_morph,
    bindings = <&kp N6>, <&kp F6>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_7, mod_morph,
    bindings = <&kp N7>, <&kp F7>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_8, mod_morph,
    bindings = <&kp N8>, <&kp F8>;
    mods = <(MOD_LSFT)>;
)
ZMK_BEHAVIOR(smart_9, mod_morph,
    bindings = <&kp N9>, <&kp F9>;
    mods = <(MOD_LSFT)>;
)

ZMK_LAYER(SEC,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               &kp PLUS          &kp MINUS         &kp STAR          &kp FSLH          xxx                                             xxx               &kp HASH          &kp PRCNT         &kp AT            &kp BSLH          xxx
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               &smart_1          &smart_2          &smart_3          &smart_4          &kp EQUAL                                       &kp UNDER         &smart_7          &smart_8          &smart_9          &smart_0          xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               &smart_5                                        &smart_6          xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           _x_               ___              xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- FUN ----------
//////////////////////////////

// #define _COPY &kp LG(C)
// #define _CUT &kp LG(X)
// ZMK_BEHAVIOR(copy_cut, tap_dance,
//     tapping-term-ms = <SHORT_TAP_MS>;
//     bindings = <_COPY>, <_CUT>;
// )
// #define _COPY_CUT &kp LG(X)
//
// #define _PASTE &kp LG(V)
//
// #define _UNDO &kp LG(Z)
// #define _REDO &kp LG(LS(Z))
// ZMK_BEHAVIOR(undo_redo, tap_dance,
//     tapping-term-ms = <SHORT_TAP_MS>;
//     bindings = <_UNDO>, <_REDO>;
// )

ZMK_BEHAVIOR(vol_prev_pp, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&kp C_PREV>, <&kp C_PP>;
)

ZMK_BEHAVIOR(vol_dn_mute, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&kp C_VOL_DN>, <&kp C_MUTE>;
)

ZMK_LAYER(FUN,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               &kp LG(LS(F))     &kp LA(LS(N1))    &kp LA(LS(N3))    &kp LA(LS(N4))    xxx                                             xxx               &kp C_NEXT        &kp C_VOL_UP      &kp C_BRI_UP      &kp LG(LC(Q))     xxx
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               &kp LG(LS(C))     &kp LA(LS(N6))    &kp LA(LS(N2))    &kp LA(LS(N5))    _x_                                             _x_               &vol_prev_pp      &vol_dn_mute      &kp C_BRI_DN      &kp LG(LS(SPACE)) xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               _x_                                             _x_               xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               _x_             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- TMP ----------
//////////////////////////////

ZMK_LAYER(TMP,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               _x_                                             _x_               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               _x_                                             _x_               xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             _x_               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- NAV ----------
//////////////////////////////

ZMK_BEHAVIOR(smart_left, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&kp LEFT>, <&kp HOME>;
)

ZMK_BEHAVIOR(smart_down, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&kp DOWN>,  <&kp PG_DN>;
)

ZMK_BEHAVIOR(smart_up, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&kp UP>, <&kp PG_UP>;
)

ZMK_BEHAVIOR(smart_right, tap_dance,
    tapping-term-ms = <SHORT_TAP_MS>;
    bindings = <&kp RIGHT>, <&kp END>;
)

ZMK_LAYER(NAV,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               _x_               _x_               _x_               _x_               xxx                                             xxx               _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               _x_                                             _x_               &smart_down       &smart_up         &smart_right      _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               _x_                                             &smart_left       xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             ___               _x_
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

//////////////////////////////
// ---------- BLU ----------
//////////////////////////////

#if CONFIG_WIRELESS

#include <dt-bindings/zmk/bt.h>

ZMK_CONDITIONAL_LAYER(FUN TMP, BLU)

ZMK_LAYER(BLU,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               &bt BT_CLR        &sys_reset        _x_               _x_               xxx                                             xxx               _x_               _x_               &sys_reset        &bt BT_CLR        xxx
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4      &bootloader                                     &bootloader       &bt BT_SEL 7      &bt BT_SEL 8      &bt BT_SEL 9      &bt BT_SEL 0      xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               &bt BT_SEL 5                                    &bt BT_SEL 6      xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

#else

ZMK_LAYER(BLU,
//╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮                                 ╭─────────────╮   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ╭─────────────╮
   xxx               &bt BT_CLR        &sys_reset        _x_               _x_               xxx                                             xxx               _x_               _x_               &sys_reset        &bt BT_CLR        xxx
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ╰─────────────╯                                 ╰─────────────╯   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
//├─────────────┤   ├─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤───┬─────────────╮                                 ╭─────────────┬───┼─────────────┼───┼─────────────┼───┼─────────────┼───┼─────────────┤   ├─────────────┤
   xxx               _x_               _x_               _x_               _x_               &bootloader                                     &bootloader       _x_               _x_               _x_               _x_               xxx
//├─────────────┤   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┼─────────────┤                                 ├─────────────┼───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ├─────────────┤
//├─────────────┼───┬─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────╮   ├─────────────┤                                 ├─────────────┤   ╭─────────────┬───┬─────────────┬───┬─────────────┬───┬─────────────┬───┼─────────────┤
   xxx               xxx               xxx               xxx               xxx               _x_                                             _x_               xxx               xxx               xxx               xxx               xxx
//╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯   ╰─────────────╯                                 ╰─────────────╯   ╰─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────┴───┴─────────────╯
//                                                                        ╭─────────────┬───┬─────────────╮ ╭─────────────╮ ╭─────────────╮ ╭─────────────┬───┬─────────────╮
                                                                           ___               ___             xxx             xxx             ___               ___
//                                                                        ╰─────────────┴───┴─────────────╯ ╰─────────────╯ ╰─────────────╯ ╰─────────────┴───┴─────────────╯
)

#endif
